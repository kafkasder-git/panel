version: '3.8'

services:
  # ============================================================================
  # KAFKASDER MANAGEMENT SYSTEM - WEB APPLICATION
  # ============================================================================
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
        VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
        VITE_APP_NAME: "Kafkasder Management System"
        VITE_APP_VERSION: "1.0.0"
    container_name: kafkasder-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - kafkasder-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============================================================================
  # NGINX REVERSE PROXY (Optional)
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: kafkasder-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - kafkasder-network
    profiles:
      - with-nginx

  # ============================================================================
  # REDIS CACHE (Optional - for future use)
  # ============================================================================
  redis:
    image: redis:7-alpine
    container_name: kafkasder-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - kafkasder-network
    profiles:
      - with-redis

networks:
  kafkasder-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
