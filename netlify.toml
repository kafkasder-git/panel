[build]
  # VITE_SENTRY_RELEASE is set to the Git commit SHA during build (Netlify provides $COMMIT_REF).
  # This allows Sentry to associate errors with specific deployments and enables uploading
  # source maps for the release during build if Sentry credentials are configured.
  command = "SECRETS_SCAN_ENABLED=false VITE_SENTRY_RELEASE=$COMMIT_REF npm run build"
  publish = "dist"

[build.environment]
  NODE_VERSION = "20"
  NPM_VERSION = "10"
  NODE_ENV = "production"
  # Force fresh install to avoid cache issues
  NETLIFY_USE_YARN = "false"
  NETLIFY_USE_NPM = "true"

# Sentry Configuration (set these in Netlify dashboard: Site settings > Environment variables)
# - VITE_SENTRY_AUTH_TOKEN: Required for source map upload (create in Sentry: Settings > Developer Settings > Auth Tokens).
#   Create a token with `project:releases` and `org:read` scopes. This is sensitive â€” do NOT commit to Git.
#   Set this token as a secret in Netlify (Site settings > Environment variables).
# - VITE_SENTRY_ORG: Your Sentry organization slug (e.g., my-organization). Required for source map upload.
# - VITE_SENTRY_PROJECT: Your Sentry project slug (e.g., my-project). Required for source map upload.
# - VITE_SENTRY_DSN: Your Sentry DSN for runtime error tracking.
# - VITE_SENTRY_ENVIRONMENT: Set to 'production' for production builds (or 'staging' for previews).
# These SHOULD be set as environment variables in the Netlify dashboard, NOT in this file.
# Reference: https://docs.netlify.com/environment-variables/overview/

# SPA routing iÃ§in redirect
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Production environment
[context.production.environment]
  NODE_ENV = "production"
  # Tag this deployment as 'production' in Sentry
  VITE_SENTRY_ENVIRONMENT = "production"

# Branch deploy iÃ§in
[context.deploy-preview.environment]
  NODE_ENV = "production"
  # Tag preview/branch deploys as 'staging' in Sentry for easier filtering
  VITE_SENTRY_ENVIRONMENT = "staging"

# Cache ayarlarÄ± - Static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/js/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/css/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# HTML ve diÄŸer dosyalar iÃ§in cache
[[headers]]
  for = "/index.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), payment=()"

# PWA files
[[headers]]
  for = "/manifest.webmanifest"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Content-Type = "application/manifest+json"

[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    Service-Worker-Allowed = "/"

# GÃ¼venlik headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), payment=()"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://*.supabase.co wss://*.supabase.co; font-src 'self' data:; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none';"

# Build processing
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

# Functions directory (gelecekte kullanÄ±m iÃ§in)
# [functions]
#   directory = "netlify/functions"

# Note: Lighthouse plugin (@netlify/plugin-lighthouse) Netlify Pro plan gerektirir
# Free plan iÃ§in kaldÄ±rÄ±ldÄ±. Performance monitoring iÃ§in:
# - Chrome DevTools Lighthouse
# - Netlify Analytics (opsiyonel)
# - Web Vitals monitoring

# ðŸš€ DEPLOYMENT INSTRUCTIONS FOR SENTRY SOURCE MAPS
# 1) Create a Sentry auth token with the following scopes: `project:releases` and `org:read`.
# 2) In the Netlify dashboard (Site settings > Environment variables) add the following environment variables:
#    - VITE_SENTRY_AUTH_TOKEN  (sensitive â€” mark as secret)
#    - VITE_SENTRY_ORG
#    - VITE_SENTRY_PROJECT
#    - VITE_SENTRY_DSN
# 3) Trigger a new deployment on Netlify (the build command sets VITE_SENTRY_RELEASE=$COMMIT_REF).
# 4) Verify source maps are uploaded in Sentry: Project Settings > Source Maps (you should see a release for the commit SHA).
# 5) Test error tracking with source maps by triggering a test error and confirming stack traces are symbolicated.
#
# Note: Source maps are intended to be uploaded during the build and deleted afterward (to avoid public exposure).
# Warning: NEVER commit VITE_SENTRY_AUTH_TOKEN or other sensitive secrets into Git. Always set them in the Netlify dashboard.