{
  "meta": {
    "project": "Kafkasder Yönetim Sistemi (Panel-5)",
    "date": "2025-10-04",
    "prepared_by": "Generated by AI Assistant"
  },
  "product_overview": "Kafkasder Yönetim Sistemi (Panel-5) is a modular web application designed to consolidate association operations, enabling role-based management of donations, beneficiaries, campaigns, financial transactions, and notifications in a secure and performance-optimized environment.",
  "core_goals": [
    "Provide role-based access control with detailed permission matrices to ensure secure and appropriate data manipulation.",
    "Enable comprehensive management of donations, beneficiaries, campaigns, and financial operations with auditability and dual approval workflows.",
    "Ensure system-wide data integrity, privacy, and compliance with GDPR/KVKK and security best practices including CSRF, XSS, and encryption.",
    "Deliver accessible, responsive, and mobile-optimized user interfaces adhering to UX standards and WCAG accessibility guidelines.",
    "Automate notifications across multiple channels and provide real-time monitoring, reporting, and analytics for operational transparency.",
    "Support scalability and performance through lazy loading, request prioritization, caching, and efficient pagination for large datasets.",
    "Facilitate extensive testing, error handling, and maintenance capabilities to ensure reliability and ease of system evolution."
  ],
  "key_features": [
    "Role-based authentication and authorization supporting SYSADMIN, ADMIN, FIN, OPS, VOL, and VIEWER roles with strict permission rules.",
    "Donation management including multi-channel tracking, receipt generation, reconciliation, and reporting with CSV/Excel export.",
    "Beneficiary registration, profile management with scoring matrices, document uploads with virus scanning and MIME checks.",
    "Campaign management with goals, timelines, real-time progress tracking, and automated closure notifications.",
    "Financial operations featuring transaction recording, dual approval workflows, limit enforcement, and audit trails.",
    "Notification system delivering alerts and updates via in-app, email, and SMS, featuring retries and scheduled summaries.",
    "Responsive UI components built with Radix UI and Tailwind CSS for desktop and mobile, including ARIA live regions for accessibility.",
    "Robust data handling with CRUD, pagination, search, and import/export capabilities, optimized for large data volumes.",
    "Security measures including CSRF tokens, input sanitization with DOMPurify, RLS policies, encrypted sensitive data, and logging.",
    "Performance optimization with lazy loading, code splitting, background sync, real-time low-frequency updates for inactive tabs.",
    "Comprehensive testing infrastructure with unit and end-to-end tests ensuring all business scenarios and permissions are validated.",
    "Accessibility compliance including keyboard navigation, screen reader support, and automated accessibility testing.",
    "Analytics and monitoring for error tracking, client/server performance metrics, and alerting on SLA breaches."
  ],
  "user_flow_summary": [
    "Donor initiates donations through various channels; FIN role records donations with auto-generated receipts; system reconciles daily bank statements with automatic discrepancy flags.",
    "OPS role registers beneficiaries and their households, uploads required documents; beneficiary profiles are scored using defined matrices; confidential data is masked based on roles.",
    "Help requests progress through a multi-stage state machine: submission, document verification, social review, scoring, decision by ADMIN, scheduling, delivery with signature/photo, and closure.",
    "ADMINs create and manage campaigns setting targets and timelines; donations are linked to campaigns with real-time progress tracking; automatic success notifications and archival upon goal completion.",
    "Financial transactions are created by FIN or ADMIN, undergo dual approval if limits exceeded, and are logged with immutable audit trails; monthly closures lock previous periods.",
    "Notifications trigger automatically at key points: new help requests assigned, approvals sent, campaign milestones reached; retries scheduled on failures; users receive messages via configured channels.",
    "Users navigate via responsive UI with accessible forms and lists; error and success states provide clear feedback; mobile experience adapts layout for touch and smaller screens."
  ],
  "validation_criteria": [
    "All user stories pass scenario-based testing covering success and failure paths including role-based access denials (403).",
    "Accessibility audits (aXe) show zero critical and major violations; keyboard navigation and ARIA live regions tested.",
    "Performance metas achieved: list page loads under 2 seconds, full page loads under 3 seconds for 75th percentile users.",
    "Role-based security enforced with RLS tested; unauthorized actions yield proper 403 responses with optional workflow triggers.",
    "Audit trails and logs are complete for all critical data changes and system events; logs retained for minimum one year.",
    "Document uploads enforce MIME types, virus scanning, and size limits; incomplete document sets block workflow progression.",
    "Notifications system retries failed sends up to 3 times with exponential backoff; scheduled summary reports generate correctly.",
    "Financial workflows enforce dual approval for limit-exceeding transactions; monthly closure procedures prevent backdating.",
    "Data uniqueness constraints for TCKN, IBAN, and receipt numbers are enforced to prevent duplicates.",
    "Soft deletion implemented with data archived out of default views; only SYSADMIN and legal processes permit hard deletes.",
    "Real-time updates throttle frequency to avoid excess usage on inactive tabs; caching policies ensure data freshness with TTLs.",
    "Test coverage includes both unit tests (Vitest) and end-to-end tests (Playwright) validating UI behavior and backend integration."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React 18.3.1",
      "Vite 7.1.8",
      "Supabase 2.57.4",
      "PostgreSQL",
      "Tailwind CSS 4.0.0",
      "Zustand 5.0.3",
      "Radix UI",
      "TanStack Query 5.59.20",
      "React Hook Form 7.55.0",
      "Zod 3.25.76",
      "Recharts 2.15.2",
      "Playwright 1.55.1",
      "Vitest 3.2.4"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "Role-based authentication with SYSADMIN, ADMIN, FIN, OPS, VOL, VIEWER roles using Supabase Auth",
        "files": [
          "components/auth/",
          "lib/auth/",
          "stores/authStore.ts",
          "hooks/usePermissions.ts",
          "hooks/useTokenRefresh.ts"
        ]
      },
      {
        "name": "Beneficiary Management",
        "description": "Comprehensive beneficiary registration, profile management, and aid request workflows",
        "files": [
          "components/beneficiary/",
          "components/forms/BeneficiaryForm.tsx",
          "services/beneficiariesService.ts",
          "hooks/useBeneficiaries.ts",
          "types/beneficiary.ts"
        ]
      },
      {
        "name": "Donation Management",
        "description": "Multi-channel donation tracking, receipt generation, and financial reconciliation",
        "files": [
          "components/pages/DonationsPage.tsx",
          "services/donationsService.ts",
          "hooks/useDonations.ts",
          "types/donation.ts"
        ]
      },
      {
        "name": "Campaign Management",
        "description": "Campaign creation, goal tracking, and progress monitoring with automated workflows",
        "files": [
          "components/pages/EventsPage.tsx",
          "services/campaignsService.ts",
          "hooks/useCampaigns.ts",
          "types/campaign.ts"
        ]
      },
      {
        "name": "Financial Operations",
        "description": "Transaction management, budget tracking, dual approval workflows, and audit trails",
        "files": [
          "components/pages/BankPaymentOrdersPage.tsx",
          "services/financialService.ts",
          "hooks/useFinancial.ts",
          "types/financial.ts"
        ]
      },
      {
        "name": "Document Management",
        "description": "Document upload, validation, virus scanning, and secure storage with MIME type enforcement",
        "files": [
          "components/beneficiary/BeneficiaryDocuments.tsx",
          "services/documentService.ts",
          "lib/sanitization.ts",
          "types/document.ts"
        ]
      },
      {
        "name": "Notification System",
        "description": "Multi-channel notifications via email, SMS, and push notifications with retry mechanisms",
        "files": [
          "components/notifications/",
          "hooks/usePushNotifications.ts",
          "lib/enhancedNotifications.tsx",
          "stores/notificationStore.ts"
        ]
      },
      {
        "name": "UI Components",
        "description": "Comprehensive accessible UI component library using Radix UI primitives and Tailwind CSS",
        "files": [
          "components/ui/",
          "components/forms/",
          "components/charts/",
          "components/ResponsiveCard.tsx",
          "components/SkeletonLoader.tsx"
        ]
      },
      {
        "name": "Data Management",
        "description": "CRUD operations, data export/import, pagination, and search functionality",
        "files": [
          "services/baseService.ts",
          "hooks/useDataExport.ts",
          "hooks/useDataImport.ts",
          "hooks/useSearch.ts",
          "hooks/usePagination.ts"
        ]
      },
      {
        "name": "Performance Optimization",
        "description": "Lazy loading, code splitting, background sync, and performance monitoring",
        "files": [
          "hooks/useLazyLoading.tsx",
          "hooks/usePerformanceOptimization.ts",
          "hooks/usePerformanceMonitoring.ts",
          "components/LazyComponents.tsx",
          "lib/performance/"
        ]
      },
      {
        "name": "Mobile Optimization",
        "description": "Mobile-first responsive design with touch interactions and haptic feedback",
        "files": [
          "components/mobile/",
          "components/MobileNavigation.tsx",
          "hooks/useAdvancedMobile.ts",
          "hooks/useHapticFeedback.ts",
          "hooks/useMobileForm.ts",
          "hooks/useTouchDevice.ts"
        ]
      },
      {
        "name": "Security Features",
        "description": "CSRF protection, XSS prevention, input sanitization, and secure storage",
        "files": [
          "lib/security/",
          "lib/sanitization.ts",
          "lib/secureStorage.ts",
          "middleware/security.ts",
          "hooks/useCSRFToken.ts"
        ]
      },
      {
        "name": "Testing Infrastructure",
        "description": "Comprehensive testing setup with Vitest for unit tests and Playwright for E2E tests",
        "files": [
          "testsprite_tests/",
          "components/__tests__/",
          "hooks/__tests__/",
          "lib/__tests__/",
          "stores/__tests__/",
          "vitest.config.ts",
          "playwright.config.ts"
        ]
      },
      {
        "name": "Accessibility Features",
        "description": "WCAG compliance, keyboard navigation, screen reader support, and accessibility testing",
        "files": [
          "components/accessibility/",
          "components/ui/SkipLinks.tsx",
          "components/ui/KeyboardShortcuts.tsx",
          "hooks/useKeyboard.ts",
          "lib/validation.ts"
        ]
      },
      {
        "name": "Analytics and Monitoring",
        "description": "Error tracking, performance monitoring, and user analytics with comprehensive logging",
        "files": [
          "components/analytics/",
          "lib/logging/",
          "lib/monitoring/",
          "lib/errorHandling.ts",
          "components/ErrorBoundary.tsx"
        ]
      }
    ]
  }
}
