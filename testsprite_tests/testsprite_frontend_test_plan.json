[
  {
    "id": "TC001",
    "title": "Successful login with valid credentials",
    "description": "Verify that a user with valid credentials and assigned role can log into the system successfully and appropriate permissions are granted.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Enter valid username and password"
      },
      {
        "type": "action",
        "description": "Click the login button"
      },
      {
        "type": "assertion",
        "description": "Verify that login is successful and user is redirected to the dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify user role permissions are correctly assigned based on role"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Login failure with invalid credentials",
    "description": "Verify that login fails when invalid username or password are entered, and appropriate error messages are shown.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Enter invalid username or password"
      },
      {
        "type": "action",
        "description": "Click the login button"
      },
      {
        "type": "assertion",
        "description": "Verify that login is denied with error message"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Access control - unauthorized access attempt",
    "description": "Ensure system returns 403 forbidden when a user tries to access a resource or perform action not allowed by their role.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as VOL role user"
      },
      {
        "type": "action",
        "description": "Attempt to access an ADMIN-only page or action"
      },
      {
        "type": "assertion",
        "description": "Verify user receives 403 forbidden response"
      },
      {
        "type": "assertion",
        "description": "Verify no data or sensitive information is accessible"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Donation recording and receipt generation",
    "description": "Validate that the FIN role can record donations from multiple channels and generate receipts with unique receipt numbers.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as FIN user"
      },
      {
        "type": "action",
        "description": "Record a new donation via web form specifying donation channel"
      },
      {
        "type": "action",
        "description": "Submit the donation record"
      },
      {
        "type": "assertion",
        "description": "Verify receipt is generated automatically with unique receipt number"
      },
      {
        "type": "assertion",
        "description": "Verify donation appears in donation list and reports"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Donation reconciliation with bank statements",
    "description": "Verify system's ability to reconcile daily bank statements with donations and flag discrepancies automatically.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Import bank statement file for daily transactions"
      },
      {
        "type": "action",
        "description": "Run reconciliation process"
      },
      {
        "type": "assertion",
        "description": "Verify matched donations are marked reconciled"
      },
      {
        "type": "assertion",
        "description": "Verify discrepancies and missing donations are flagged for review"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Beneficiary registration workflow",
    "description": "Test beneficiary registration including household data entry, scoring matrix calculations, and document uploads with virus scan and MIME checks.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as OPS user"
      },
      {
        "type": "action",
        "description": "Navigate to beneficiary registration form"
      },
      {
        "type": "action",
        "description": "Fill in beneficiary and household data"
      },
      {
        "type": "action",
        "description": "Upload required documents with valid MIME types"
      },
      {
        "type": "assertion",
        "description": "Verify virus scan runs on uploaded documents"
      },
      {
        "type": "assertion",
        "description": "Verify scoring matrix is calculated correctly"
      },
      {
        "type": "assertion",
        "description": "Verify beneficiary profile is saved and visible in the list"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Beneficiary profile data masking for unauthorized roles",
    "description": "Ensure confidential beneficiary data fields are masked or hidden when viewed by roles that do not have permission.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as VOL or VIEWER user"
      },
      {
        "type": "action",
        "description": "Access beneficiary profile with confidential data"
      },
      {
        "type": "assertion",
        "description": "Verify confidential data fields are masked or not displayed"
      },
      {
        "type": "assertion",
        "description": "Verify no data leaks occur"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Campaign creation and progress tracking",
    "description": "Validate ADMIN users can create campaigns with goals and timelines, and system tracks donation progress with real-time updates.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as ADMIN user"
      },
      {
        "type": "action",
        "description": "Navigate to campaign creation page"
      },
      {
        "type": "action",
        "description": "Create campaign with target amount and date range"
      },
      {
        "type": "assertion",
        "description": "Verify campaign is created and visible in campaigns list"
      },
      {
        "type": "action",
        "description": "Record donations linked to campaign"
      },
      {
        "type": "assertion",
        "description": "Verify campaign progress bar updates in real-time"
      },
      {
        "type": "assertion",
        "description": "Verify automatic campaign closure and notification on goal completion"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Financial transaction creation with dual approval",
    "description": "Ensure transactions created by FIN or ADMIN roles above limit require dual approval and audit trail records all actions.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as FIN user"
      },
      {
        "type": "action",
        "description": "Create new financial transaction exceeding approval limit"
      },
      {
        "type": "assertion",
        "description": "Verify transaction is marked as pending approval"
      },
      {
        "type": "action",
        "description": "Login as ADMIN user"
      },
      {
        "type": "action",
        "description": "Approve the pending transaction"
      },
      {
        "type": "assertion",
        "description": "Verify transaction status changes to approved"
      },
      {
        "type": "assertion",
        "description": "Verify audit trail logs transaction creation and approval with timestamps and user info"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Monthly closure locks previous financial periods",
    "description": "Verify the monthly closure process locks previous periods to prevent backdating or changes, and new entries can only be made in the current period.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Perform monthly financial closure"
      },
      {
        "type": "action",
        "description": "Attempt to create or modify transactions dated in closed periods"
      },
      {
        "type": "assertion",
        "description": "Verify system rejects modifications with appropriate error"
      },
      {
        "type": "action",
        "description": "Create transaction in current open period"
      },
      {
        "type": "assertion",
        "description": "Verify transaction is accepted"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Notification delivery with retries and channel fallbacks",
    "description": "Validate the notification system sends alerts via configured channels (in-app, email, SMS), retries failed attempts with exponential backoff, and generates scheduled summaries.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger notification event (e.g. new help request assigned)"
      },
      {
        "type": "assertion",
        "description": "Verify notification is sent via all configured channels"
      },
      {
        "type": "action",
        "description": "Simulate failure on one channel (e.g. SMS)"
      },
      {
        "type": "assertion",
        "description": "Verify system retries sending with exponential backoff"
      },
      {
        "type": "action",
        "description": "Verify scheduled summary notifications are generated correctly"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Accessibility keyboard navigation and screen reader support",
    "description": "Test that all user interface components support keyboard navigation and that ARIA live regions correctly announce updates to screen readers, meeting WCAG guidelines.",
    "category": "accessibility",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate application pages and forms using only keyboard"
      },
      {
        "type": "assertion",
        "description": "Verify focus order is logical and all interactive elements are accessible"
      },
      {
        "type": "assertion",
        "description": "Verify screen reader reads ARIA live region announcements for dynamic content updates"
      },
      {
        "type": "assertion",
        "description": "Ensure no critical or major accessibility violations using automated aXe audit"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Document upload validation and virus scanning",
    "description": "Verify documents uploaded by beneficiaries enforce allowed MIME types, run virus scanning, and block workflow progression if requirements are unmet.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to upload documents with various MIME types (allowed and disallowed)"
      },
      {
        "type": "assertion",
        "description": "Verify only allowed MIME types are accepted"
      },
      {
        "type": "action",
        "description": "Upload document containing virus signature in test environment"
      },
      {
        "type": "assertion",
        "description": "Verify virus scan detects and blocks upload"
      },
      {
        "type": "assertion",
        "description": "Attempt to progress beneficiary workflow with incomplete document set"
      },
      {
        "type": "assertion",
        "description": "Verify system blocks progression and shows appropriate user message"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Data uniqueness constraints enforcement",
    "description": "Verify the system enforces unique constraints for critical fields such as TCKN, IBAN, and receipt numbers, preventing creation of duplicates.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to create beneficiary or donor with existing TCKN"
      },
      {
        "type": "assertion",
        "description": "Verify creation is rejected with clear error message"
      },
      {
        "type": "action",
        "description": "Attempt to create financial transaction with duplicate IBAN or receipt number"
      },
      {
        "type": "assertion",
        "description": "Verify system rejects duplicates"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Soft deletion and data archival",
    "description": "Verify that data deletions are soft by default: records are archived out of default views, and only SYSADMIN or legal-approved workflows can perform hard deletes.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Delete a beneficiary record as ADMIN user"
      },
      {
        "type": "assertion",
        "description": "Verify record is removed from default views but remains in database with archived flag"
      },
      {
        "type": "action",
        "description": "Attempt to access deleted record"
      },
      {
        "type": "assertion",
        "description": "Verify record is inaccessible to non-SYSADMIN users"
      },
      {
        "type": "action",
        "description": "Perform hard delete as SYSADMIN user"
      },
      {
        "type": "assertion",
        "description": "Verify record is permanently removed"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "CSRF and XSS protection validation",
    "description": "Validate that CSRF tokens are required on state changing requests and user inputs are sanitized against XSS attacks using DOMPurify.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt state-changing API request without CSRF token"
      },
      {
        "type": "assertion",
        "description": "Verify request is rejected"
      },
      {
        "type": "action",
        "description": "Insert malicious script payload into form input fields"
      },
      {
        "type": "assertion",
        "description": "Verify inputs are sanitized and scripts are neutralized in stored data and display"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Pagination, search and lazy loading performance",
    "description": "Test system responsiveness and data handling for large datasets including pagination, search functionality, and lazy loading of UI components with efficient rendering.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to large data listing page (e.g. beneficiaries or donations)"
      },
      {
        "type": "action",
        "description": "Perform search queries with various filters"
      },
      {
        "type": "assertion",
        "description": "Verify correct filtered data is displayed with pagination controls"
      },
      {
        "type": "action",
        "description": "Scroll through listing to trigger lazy loading"
      },
      {
        "type": "assertion",
        "description": "Verify additional data loads smoothly without UI freezes"
      },
      {
        "type": "assertion",
        "description": "Verify page load times meet performance criteria"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Real-time updates and background sync on inactive tabs",
    "description": "Verify real-time updates are throttled with low-frequency polling on inactive browser tabs and background sync maintains data freshness with caching and TTL policies.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open application in multiple tabs"
      },
      {
        "type": "action",
        "description": "Deactivate one tab and keep others active"
      },
      {
        "type": "assertion",
        "description": "Verify inactive tab receives reduced frequency real-time updates"
      },
      {
        "type": "assertion",
        "description": "Verify background sync updates cached data on inactive tabs without excessive resource use"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Comprehensive end-to-end user workflow test",
    "description": "Validate the full flow of a help request from submission to closure including document verification, social review, scoring, approval, scheduling, delivery with signature/photo, and status updates with notifications.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Submit new help request as VOL or beneficiary"
      },
      {
        "type": "action",
        "description": "Upload supporting documents and pass verification"
      },
      {
        "type": "action",
        "description": "OPS performs social review and scoring"
      },
      {
        "type": "action",
        "description": "ADMIN reviews and decides approval or rejection"
      },
      {
        "type": "assertion",
        "description": "Verify workflow advances correctly at each stage with accurate status notifications"
      },
      {
        "type": "action",
        "description": "Schedule delivery and complete delivery with signature/photo confirmation"
      },
      {
        "type": "action",
        "description": "Close help request"
      },
      {
        "type": "assertion",
        "description": "Verify final status is closed and data archived as necessary"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Audit trail completeness and log retention",
    "description": "Check that all critical data changes, transaction approvals, and system events are logged immutably and logs are retained for minimum one year with tamper protection.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Perform data create, update, delete actions across various modules"
      },
      {
        "type": "action",
        "description": "Perform financial transaction approvals"
      },
      {
        "type": "assertion",
        "description": "Verify corresponding audit trail entries exist with user, timestamp, and action details"
      },
      {
        "type": "assertion",
        "description": "Verify logs are stored securely with retention policies applied"
      }
    ]
  },
  {
    "id": "TC021",
    "title": "Responsive and mobile-optimized UI rendering",
    "description": "Validate UI adapts correctly to different screen sizes and device types with responsive layouts, touch interaction support, and mobile-first design principles.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open application on desktop browser and verify UI layout"
      },
      {
        "type": "action",
        "description": "Resize window to mobile screen dimensions and verify layout adaptation"
      },
      {
        "type": "action",
        "description": "Test touch interactions on mobile device or emulation"
      },
      {
        "type": "assertion",
        "description": "Verify UI components remain accessible and functional"
      },
      {
        "type": "assertion",
        "description": "Verify ARIA attributes and live regions operate correctly on mobile"
      }
    ]
  },
  {
    "id": "TC022",
    "title": "Automated accessibility audits using aXe",
    "description": "Run automated accessibility testing using aXe on critical pages and components to ensure no critical or major accessibility violations exist.",
    "category": "accessibility",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Run aXe accessibility scan on login page, main dashboard, form pages (beneficiaries, donations, campaigns)"
      },
      {
        "type": "assertion",
        "description": "Verify zero critical and major aXe violations"
      }
    ]
  },
  {
    "id": "TC023",
    "title": "Unit test coverage for authentication and authorization logic",
    "description": "Ensure unit tests cover all critical authentication functions including token management, role permission checks, and token refresh logic.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Run Vitest test suite for authentication modules"
      },
      {
        "type": "assertion",
        "description": "Verify all key functions have 100% test coverage"
      },
      {
        "type": "assertion",
        "description": "Verify tests validate permission matrices and token expiry/refresh scenarios"
      }
    ]
  },
  {
    "id": "TC024",
    "title": "End-to-end test of campaign donation linking and reporting",
    "description": "Using Playwright, test the full flow from creating a campaign, recording donations linked to the campaign, and verifying reporting and progress tracking updates.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as ADMIN and create a new campaign"
      },
      {
        "type": "action",
        "description": "Login as FIN and record multiple donations linked to the campaign"
      },
      {
        "type": "action",
        "description": "Navigate to campaign report page"
      },
      {
        "type": "assertion",
        "description": "Verify reported totals and progress bar accurately reflect donation sums"
      }
    ]
  }
]
