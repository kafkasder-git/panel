[
  {
    "id": "TC001",
    "title": "Successful login with valid credentials",
    "description": "Verify that a user can successfully login with correct username/email and password using Supabase authentication.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Input valid username/email and password"
      },
      {
        "type": "action",
        "description": "Click login button"
      },
      {
        "type": "assertion",
        "description": "Check user is redirected to dashboard appropriate to role"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Login fails with invalid credentials",
    "description": "Verify that login fails with incorrect username/email or password and appropriate error message is shown.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Input invalid username/email or password"
      },
      {
        "type": "action",
        "description": "Click login button"
      },
      {
        "type": "assertion",
        "description": "Verify error message indicating invalid credentials is displayed"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Role-Based Access Control enforcement",
    "description": "Validate that users can access only the modules and features permitted for their assigned roles and receive HTTP 403 for unauthorized attempts.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as SYSADMIN"
      },
      {
        "type": "assertion",
        "description": "Access all system modules successfully"
      },
      {
        "type": "action",
        "description": "Login as VOL role"
      },
      {
        "type": "action",
        "description": "Attempt to access financial management pages"
      },
      {
        "type": "assertion",
        "description": "Verify HTTP 403 Forbidden response and error notification"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "CSRF protection on authenticated requests",
    "description": "Ensure that all authenticated requests include valid CSRF tokens and requests without tokens are rejected.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login and observe CSRF token retrieval"
      },
      {
        "type": "action",
        "description": "Make authenticated request with valid CSRF token"
      },
      {
        "type": "assertion",
        "description": "Request succeeds with expected data returned"
      },
      {
        "type": "action",
        "description": "Repeat request without CSRF token"
      },
      {
        "type": "assertion",
        "description": "Request is rejected with 403 error"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Beneficiary registration with required documents upload",
    "description": "Test beneficiary registration by OPS role including document uploads with validation and confidentiality handling.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as OPS role"
      },
      {
        "type": "action",
        "description": "Navigate to beneficiary registration page"
      },
      {
        "type": "action",
        "description": "Fill all mandatory beneficiary fields correctly"
      },
      {
        "type": "action",
        "description": "Upload required documents adhering to validation rules"
      },
      {
        "type": "action",
        "description": "Submit the registration form"
      },
      {
        "type": "assertion",
        "description": "Verify beneficiary is created with uploaded documents and confidentiality flags applied"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Beneficiary registration rejects invalid document formats",
    "description": "Ensure document upload validation rejects unsupported formats and prompts error before form submission.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to beneficiary registration page"
      },
      {
        "type": "action",
        "description": "Attempt to upload unsupported document format (e.g., .exe file)"
      },
      {
        "type": "assertion",
        "description": "Verify error message related to invalid document type"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Aid request submission and multi-stage review flow",
    "description": "Verify aid request submission, status progression through stages: pending, review, approved/rejected, scheduled, delivered, and closed.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as OPS role"
      },
      {
        "type": "action",
        "description": "Submit new aid request with valid beneficiary data"
      },
      {
        "type": "assertion",
        "description": "Aid request status is set to 'pending'"
      },
      {
        "type": "action",
        "description": "Login as ADMIN role and move aid request to 'review'"
      },
      {
        "type": "assertion",
        "description": "Status updated to 'review'"
      },
      {
        "type": "action",
        "description": "Approve the aid request"
      },
      {
        "type": "assertion",
        "description": "Status changes to 'approved'"
      },
      {
        "type": "action",
        "description": "Schedule and deliver the aid"
      },
      {
        "type": "assertion",
        "description": "Status flows through 'scheduled' and 'delivered', then finally 'closed'"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Donation management lifecycle with multiple payment sources",
    "description": "Test recording online and offline donations, automatic receipt generation, reconciliation with bank records, and refund handling.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Record online donation with valid payment details"
      },
      {
        "type": "assertion",
        "description": "Donation saved and receipt automatically generated"
      },
      {
        "type": "action",
        "description": "Record offline donation entry"
      },
      {
        "type": "assertion",
        "description": "Donation reflected in list with correct source type"
      },
      {
        "type": "action",
        "description": "Perform bank reconciliation with recorded donations"
      },
      {
        "type": "assertion",
        "description": "Donation records matched or flagged for discrepancies"
      },
      {
        "type": "action",
        "description": "Process a refund for a donation"
      },
      {
        "type": "assertion",
        "description": "Refund recorded and donation receipt invalidated or marked accordingly"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Campaign lifecycle management and notifications",
    "description": "Verify creating campaigns, editing drafts, activating, pausing, and automatic closing upon target achievement with notification triggers.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Create new fundraising campaign as ADMIN"
      },
      {
        "type": "assertion",
        "description": "Campaign saved as draft"
      },
      {
        "type": "action",
        "description": "Activate campaign"
      },
      {
        "type": "assertion",
        "description": "Campaign status updated to active and visible in tracking"
      },
      {
        "type": "action",
        "description": "Pause campaign"
      },
      {
        "type": "assertion",
        "description": "Campaign status updated to paused"
      },
      {
        "type": "action",
        "description": "Drive donations to reach target threshold"
      },
      {
        "type": "assertion",
        "description": "Campaign automatically closes and notification sent to stakeholders"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Financial transactions dual-approval workflow",
    "description": "Verify entering bank payment orders requiring dual-signature approvals prior to execution.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Enter new bank payment order as FIN role"
      },
      {
        "type": "assertion",
        "description": "Payment order saved in pending approval state"
      },
      {
        "type": "action",
        "description": "Approve payment order as second authorized user"
      },
      {
        "type": "assertion",
        "description": "Order is marked fully approved and ready for processing"
      },
      {
        "type": "action",
        "description": "Attempt to process payment without dual approval"
      },
      {
        "type": "assertion",
        "description": "Operation blocked and appropriate error issued"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Document upload validation and virus scanning enforcement",
    "description": "Test document uploads to verify validation rules and optional virus scanning correctly reject unsafe files.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Upload document with valid format and size"
      },
      {
        "type": "assertion",
        "description": "Document accepted and stored securely"
      },
      {
        "type": "action",
        "description": "Upload document flagged by virus scan"
      },
      {
        "type": "assertion",
        "description": "Upload rejected with error notification"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Audit trail logging for critical actions",
    "description": "Verify that all critical actions are logged with detail and audit trail retention meets minimum policy (1 year).",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Perform critical action such as user role change"
      },
      {
        "type": "assertion",
        "description": "Audit log entry created with timestamp, actor, and details"
      },
      {
        "type": "action",
        "description": "Query audit log for past actions older than 1 year"
      },
      {
        "type": "assertion",
        "description": "Older entries are archived or purged according to retention policy"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "UI accessibility compliance with aXe tool",
    "description": "Run automated accessibility tests to ensure no critical violations in key user interface pages.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to dashboard, beneficiary registration, aid management, and campaign pages"
      },
      {
        "type": "action",
        "description": "Run aXe accessibility scan on each page"
      },
      {
        "type": "assertion",
        "description": "Verify zero critical accessibility violations detected"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Data export with role-based permission enforcement",
    "description": "Validate that data exports are only permitted for users with export privileges and that exported data matches filters.",
    "category": "security",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as authorized user with export permissions"
      },
      {
        "type": "action",
        "description": "Apply filters and initiate CSV and Excel data exports"
      },
      {
        "type": "assertion",
        "description": "Exported files match filtered data and are correctly formatted"
      },
      {
        "type": "action",
        "description": "Attempt export as user without permission"
      },
      {
        "type": "assertion",
        "description": "Export request is denied with appropriate error"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Form validation and error handling with Zod schemas",
    "description": "Ensure all forms across modules enforce validation rules using Zod schemas and provide meaningful feedback on errors.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to beneficiary registration and donation entry forms"
      },
      {
        "type": "action",
        "description": "Submit each form with missing required fields or invalid data types"
      },
      {
        "type": "assertion",
        "description": "Form displays relevant validation messages and prevents submission"
      },
      {
        "type": "action",
        "description": "Submit form with valid data"
      },
      {
        "type": "assertion",
        "description": "Form submits successfully without errors"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Soft-delete functionality and role constraints on hard delete",
    "description": "Verify that data records are soft-deleted by default and only SYSADMIN can perform hard deletes.",
    "category": "security",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Delete beneficiary record as ADMIN"
      },
      {
        "type": "assertion",
        "description": "Record is soft-deleted and can be restored"
      },
      {
        "type": "action",
        "description": "Attempt hard delete as ADMIN"
      },
      {
        "type": "assertion",
        "description": "Operation is blocked with permission error"
      },
      {
        "type": "action",
        "description": "Perform hard delete as SYSADMIN"
      },
      {
        "type": "assertion",
        "description": "Record is permanently deleted and removed from audit logs if appropriate"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Prevent duplicate entries of unique fields",
    "description": "Ensure system enforces uniqueness constraints on fields like TCKN, IBAN, and receipt numbers and provides clear errors on duplicates.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to register beneficiary with TCKN already in system"
      },
      {
        "type": "assertion",
        "description": "Duplicate TCKN error displayed"
      },
      {
        "type": "action",
        "description": "Attempt to record donation with existing receipt number"
      },
      {
        "type": "assertion",
        "description": "Duplicate receipt number error displayed"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Data encryption and secure storage verification",
    "description": "Verify sensitive data fields are encrypted at rest and that secure storage mechanisms correctly protect data.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Enter sensitive beneficiary and financial information"
      },
      {
        "type": "assertion",
        "description": "Check database confirms encryption of sensitive fields"
      },
      {
        "type": "action",
        "description": "Attempt unauthorized direct access to encrypted data"
      },
      {
        "type": "assertion",
        "description": "Data is unreadable without proper decryption keys"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "XSS prevention on user inputs",
    "description": "Validate that all user inputs are sanitized to prevent XSS attacks including in messaging and form fields.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Input script tags or malicious HTML in text fields (e.g., internal messaging)"
      },
      {
        "type": "assertion",
        "description": "Input is sanitized and scripts are not executed in UI"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Internal messaging system functionality",
    "description": "Verify sending, receiving, and role-based access of messages within organization roles.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as VOL and send message to FIN role user"
      },
      {
        "type": "assertion",
        "description": "Message is delivered and visible to recipient"
      },
      {
        "type": "action",
        "description": "Attempt to send message to unauthorized role or external user"
      },
      {
        "type": "assertion",
        "description": "Message sending blocked or error shown"
      }
    ]
  },
  {
    "id": "TC021",
    "title": "Performance test for dashboard load time",
    "description": "Verify dashboard and list pages render within performance targets: render <2s, page load <3s at 75th percentile latency.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Measure dashboard load time under typical load conditions"
      },
      {
        "type": "assertion",
        "description": "Dashboard load time is below 3 seconds (75th percentile)"
      },
      {
        "type": "action",
        "description": "Measure large list render times on beneficiary and donation lists"
      },
      {
        "type": "assertion",
        "description": "Lists render in under 2 seconds"
      }
    ]
  },
  {
    "id": "TC022",
    "title": "Error handling and user-friendly notifications",
    "description": "Test network failure and server error scenarios to verify error boundaries and retry mechanisms with clear notifications.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate network failure during donation submission"
      },
      {
        "type": "assertion",
        "description": "User sees friendly error message with retry option"
      },
      {
        "type": "action",
        "description": "Cause server-side error on financial transaction attempt"
      },
      {
        "type": "assertion",
        "description": "Error boundary captures error and displays informative message without crashing app"
      }
    ]
  },
  {
    "id": "TC023",
    "title": "GDPR/KVKK compliance in data processing and export",
    "description": "Verify data deletion, anonymization processes, and export functionalities comply with privacy regulations.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Request data deletion for beneficiary and verify anonymization"
      },
      {
        "type": "assertion",
        "description": "Personal data is correctly deleted or anonymized"
      },
      {
        "type": "action",
        "description": "Export data including PII fields as authorized user"
      },
      {
        "type": "assertion",
        "description": "Export includes only permitted fields and follows user consent rules"
      }
    ]
  }
]
